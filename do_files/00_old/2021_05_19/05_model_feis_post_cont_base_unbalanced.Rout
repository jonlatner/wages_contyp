
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-apple-darwin17.0 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # TOP COMMANDS -----
> # https://www.understandingsociety.ac.uk/documentation/mainstage/dataset-documentation/index/
> # https://stackoverflow.com/questions/7505547/detach-all-packages-while-working-in-r
> detachAllPackages <- function() {
+         basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
+         package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
+         package.list <- setdiff(package.list,basic.packages)
+         if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
+         
+ }
> detachAllPackages()
> rm(list=ls(all=TRUE))
> 
> # FOLDERS
> setwd("/Users/jonathanlatner/Google Drive/SECCOPA/")
> # setwd("C:/Users/ba1ks6/Google Drive/SECCOPA/")
> 
> data_files = "projects/mobility/data_files/"
> results = "projects/mobility/results/"
> 
> # LIBRARY
> library(tidyverse)
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.0.6     ✔ dplyr   1.0.4
✔ tidyr   1.1.2     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
> library(feisr)
> library(texreg)
Version:  1.37.5
Date:     2020-06-17
Author:   Philip Leifeld (University of Essex)

Consider submitting praise using the praise or praise_interactive functions.
Please cite the JSS article in your publications -- see citation("texreg").

Attaching package: ‘texreg’

The following object is masked from ‘package:tidyr’:

    extract

> 
> options(scipen = 999) # disable scientific notation
> 
> # load data -----
> 
> df_sample_0 <- readRDS(paste0(data_files, "df_sample_clean_unbalanced.rds")) 
> 
> # clean data -----
> 
> df_sample_1 <- df_sample_0 %>%
+         filter(unmp==0) %>%
+         select(country,study_period,pid,year,temp,ln_hourly_wage,period,post_temp) %>%
+         group_by(country,study_period,pid) %>%
+         mutate(count = row_number(),
+                max = max(count)) %>%
+         ungroup() %>%
+         filter(max>2) %>%
+         mutate(post_temp_sq = post_temp * post_temp)
> 
> # prepare for output ----
> df_output = data.frame() # output
> df_yhat <- data.frame()
> 
> # post model ----
> 
> country <- c("AU","CH","DE","JP","KO","NE-LISS","UK")
> for(c in country) {
+         print(c)
+         df_country <- df_sample_1
+         df_country <- df_country %>%
+                 filter(country == c)
+         year <- unique(sort(df_country$study_period))
+         for(y in year) {
+                 print(y)
+                 df_period <- df_country %>%
+                         filter(study_period == y)
+                 
+                 # model
+                 df_period <- data.frame(df_period)
+                 feis_model <- feis(ln_hourly_wage ~ temp + post_temp | year, 
+                                    data = df_period, 
+                                    id = "pid")
+ 
+                 output <- data.frame(feis_model$coefficients)
+                 colnames(output) <- "estimate"
+                 output$std.error <- coef(summary(feis_model))[, "Std. Error"]
+                 output$country <- c
+                 output$study_period <- y
+                 output$model <- "post_cont"
+                 output$term <- row.names(output)
+                 rownames(df_output) <- c()
+                 df_output <- rbind(df_output,output)
+ 
+                 # predict
+                 yhat <- data.frame(predict(object = feis_model,
+                                                     newdata = data.frame(temp = 1,
+                                                                          post_temp = c(0,1,2,3,4,5)),
+                                                     se.fit = TRUE)) %>%
+                         select(fit,se.fit)
+                 yhat$variable <- "base"
+                 yhat$type <- "cont"
+                 yhat$period <- c(0,1,2,3,4,5)
+                 yhat$study_period = y
+                 yhat$country = c
+ 
+                 df_yhat <- rbind(df_yhat,yhat)
+ 
+                 
+         }
+ }
[1] "AU"
[1] 2001
[1] 2002
[1] 2003
[1] 2004
[1] 2005
[1] 2006
[1] 2007
[1] 2008
[1] 2009
[1] 2010
[1] 2011
[1] 2012
[1] "CH"
[1] 2000
[1] 2001
[1] 2002
[1] 2003
[1] 2004
[1] 2005
[1] 2006
[1] 2007
[1] 2008
[1] 2009
[1] 2010
[1] 2011
[1] 2012
[1] "DE"
[1] 2000
[1] 2001
[1] 2002
[1] 2003
[1] 2004
[1] 2005
[1] 2006
[1] 2007
[1] 2008
[1] 2009
[1] 2010
[1] 2011
[1] 2012
[1] "JP"
[1] 2004
[1] 2005
[1] 2006
[1] 2007
[1] 2008
[1] 2009
[1] 2010
[1] 2011
[1] 2012
[1] "KO"
[1] 2000
[1] 2001
[1] 2002
[1] 2003
[1] 2004
[1] 2005
[1] 2006
[1] 2007
[1] 2008
[1] 2009
[1] 2010
[1] 2011
[1] 2012
[1] "NE-LISS"
[1] 2008
[1] 2009
[1] 2010
[1] 2011
[1] 2012
[1] "UK"
[1] 2000
[1] 2001
[1] 2002
[1] 2003
[1] 2004
[1] 2005
[1] 2006
[1] 2007
[1] 2008
[1] 2009
[1] 2010
[1] 2011
[1] 2012
> 
> country <- c("NE-LSP","IT")
> for(c in country) {
+         print(c)
+         df_country <- df_sample_1
+         df_country <- df_country %>%
+                 filter(country == c)
+         year <- unique(sort(df_country$study_period))
+         for(y in year) {
+                 print(y)
+                 df_period <- df_country %>%
+                         filter(study_period == y)
+                 
+                 # model
+                 df_period <- data.frame(df_period)
+                 feis_model <- feis(ln_hourly_wage ~ temp + post_temp | year, 
+                                    data = df_period, 
+                                    id = "pid")
+ 
+                 output <- data.frame(feis_model$coefficients)
+                 colnames(output) <- "estimate"
+                 output$std.error <- coef(summary(feis_model))[, "Std. Error"]
+                 output$country <- c
+                 output$study_period <- y
+                 output$model <- "post_cont"
+                 output$term <- row.names(output)
+                 rownames(df_output) <- c()
+                 df_output <- rbind(df_output,output)
+                 
+                 # predict
+                 yhat <- data.frame(predict(object = feis_model,
+                                            newdata = data.frame(temp = 1,
+                                                                 post_temp = c(0,2,4)),
+                                            se.fit = TRUE)) %>%
+                         select(fit,se.fit)
+                 yhat$variable <- "base"
+                 yhat$type <- "cont"
+                 yhat$period <- c(0,2,4)
+                 yhat$study_period = y
+                 yhat$country = c
+                 
+                 df_yhat <- rbind(df_yhat,yhat)
+                 
+                 
+         }
+ }
[1] "NE-LSP"
[1] 2000
[1] 2002
[1] 2004
[1] 2006
[1] 2008
[1] "IT"
[1] 2000
[1] 2002
[1] 2004
[1] 2006
[1] 2008
[1] 2010
> 
> # Save data sets ----
> 
> write.csv(df_output, file = paste0(results, "results_output_feis_post_cont_base_unbalanced.csv"))
> write.csv(df_yhat, file = paste0(results, "results_yhat_feis_post_cont_base_unbalanced.csv"))
> 
> proc.time()
   user  system elapsed 
236.106   4.169 244.613 
